name: Terraform Deployments

on:
 workflow_dispatch:
   inputs:
     terraform_action:
       type: choice
       description: select terraform action
       options:
       - apply
       - destroy
       required: true

 push:
   branches:
     - main

permissions:
  id-token: write   # Needed for OIDC to AWS
  contents: read

jobs:
  # -------------------
  # Bootstrap State Backend (S3 + DynamoDB)
  # -------------------
  bootstrap:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployment/s3bucket
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubActions

      - name: Terraform Init (local only)
        run: terraform init -backend=false

      - name: Create backend resources
        run: terraform apply -auto-approve

  # -------------------
  # Deploy Infrastructure (EC2, VPC, etc.)
  # -------------------
  deployments:
    runs-on: ubuntu-latest
    needs: bootstrap    # ensures bootstrap runs first
    defaults:
      run:
        working-directory: deployments/infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubActions
          aws-region: us-east-1

      - name: Terraform Init (with backend)
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=my-kwace-sf-buck" \
            -backend-config="key=files/statefiles/terras3.tfstate" \
            -backend-config="region=us-east-1"

      - name: Terraform plan
        run: terraform plan

      - name: Terraform apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        run: terraform apply -auto-approve
     
      - name: Terraform destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        run: terraform destroy -auto-approve